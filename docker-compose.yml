services:
  db:
    image: postgres:14.0
    env_file:
      - ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      cratd2c_stakingmanager_backend_net:
    container_name: cratd2c_stakingmanager_backend_db
  web: &web
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:${DOCKER_EXPOSE_PORT?8000}:${DJANGO_PORT?8000}"
    depends_on:
      - db
    volumes:
      - ./src/:/code/src/
      - ./static/:/code/static/
      - ./media/:/code/media/
      - ./logs:/code/logs/
    command: /runserver.sh
    restart: unless-stopped
    networks:
      cratd2c_stakingmanager_backend_net:
    container_name: cratd2c_stakingmanager_backend_web

  redis:
    image: redis:5.0
    restart: unless-stopped
    volumes:
      - ./.docker/redis-data:/data
    networks:
      cratd2c_stakingmanager_backend_net:
    container_name: cratd2c_stakingmanager_backend_redis
  
  celery:
    <<: *web
    image: celery:3.1
    command: "celery -A src worker -l info"
    depends_on:
      - redis
    volumes:
      - ./logs:/code/logs/
    ports: []
    container_name: cratd2c_stakingmanager_backend_celery
  celery_beat:
    <<: *web
    image: celery:3.1
    command: "celery -A src beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
    ports: []
    container_name: cratd2c_stakingmanager_backend_celery_beat
  

networks:
  cratd2c_stakingmanager_backend_net:
